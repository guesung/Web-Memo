name: E2E

on:
  push:
  pull_request:

jobs:
  tests_e2e:
    runs-on: ubuntu-latest
    env:
      WEB_URL: http://localhost:3000
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            packages/web/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml', 'packages/web/next.config.js') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Setting environment variables
        run: |
          echo "${{ secrets.SHARED_ENV_FILE }}" >> packages/env/.env
          echo WEB_URL=${{ env.WEB_URL }} >> packages/env/.env
          echo NODE_ENV=development >> packages/env/.env

          echo "${{ secrets.WEB_ENV_FILE }}" > packages/web/.env
          echo NEXT_PUBLIC_WEB_URL=${{ env.WEB_URL }} >> packages/web/.env

      - name: Build The Extension
        run: pnpm run build:extension

      - name: Install playwright browsers
        run: pnpm exec playwright install
        working-directory: e2e


      - name: Run tests
        run: pnpm run test:e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30