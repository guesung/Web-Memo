name: Release New Version

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  build-extension:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: pnpm
      - name: pnpm install
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: setting environment variables
        run: |
          echo "${{ secrets.SHARED_ENV_FILE }}" >> packages/shared/.env
          echo WEB_URL=${{ secrets.PROD_WEB_URL }} >> packages/shared/.env

      - name: build
        run: pnpm run build:extension

      - name: Zip the build files
        run: pnpm run zip

      - name: Upload zipped file on artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension
          path: dist-zip/extension.zip

  upload-extension:
    needs: build-extension
    runs-on: ubuntu-22.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Upload zipped file on chrome store
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: extension/extension.zip
          extension-id: eaiojpmgklfngpjddhoalgcpkepgkclh
          client-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          refresh-token: ${{ secrets.REFRESH_TOKEN }}
          publish: false

      - name: Update gitHub releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes

  build-web:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: setting environment variables
        run: |
          echo "${{ secrets.SHARED_ENV_FILE }}" >> packages/shared/.env
          echo WEB_URL=${{ secrets.PROD_WEB_URL }} >> packages/shared/.env

          echo "${{ secrets.WEB_ENV_FILE }}" > packages/web/.env
          echo NEXT_PUBLIC_WEB_URL=${{ secrets.PROD_WEB_URL }} >> packages/web/.env

      - name : Vercel Pull
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: |
          VERCEL_DEPOLYED_URL="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          vercel --prod --token=${{ secrets.VERCEL_TOKEN }}